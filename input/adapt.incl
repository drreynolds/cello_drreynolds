# Problem: 2D Implosion problem
# Author:  James Bordner (jobordner@ucsd.edu)

include "input/method_ppm-1.in"

Mesh {
   root_blocks = [2,2];
   adapt {
      type = ["slope"];
      balance = true;
   }
}

Stopping { 
	 cycle = 10000; 
	 time = 0.1;
}

Boundary { type = "periodic"; }

Testing {
   cycle_final = 100; 
   time_final  = 0.108293093927205;
}

Initial {
    density       { value = 
    [
       1.000, 1.0*x + 2.0*y  < 1.0,
       1.000, 1.0*x + 2.0*y  > 2.0,
       1.000, 2.0*x - 1.0*y  < 0.0,
       1.000, 2.0*x - 1.0*y  > 1.0,
#       1.000, x + 2.0*y >= 0.5,
#       1.000, x + 2.0*y >= 0.5,
#      1.000,  (x- 0.50)*(x- 0.50)+(y- 0.50)*(y- 0.50) <= 0.01,
#      1.000,  (x- 0.75)*(x- 0.75)+(y- 0.25)*(y- 0.25) <= 0.01,
#      1.000,  (x- 0.75)*(x- 0.75)+(y- 0.75)*(y- 0.75) <= 0.01,
#      1.000,  (x- 0.25)*(x- 0.25)+(y- 0.75)*(y- 0.75) <= 0.01,
                   0.125 ]; };
    total_energy  { value = 
    [ 
       1.0  / (0.4 * 1.0), 1.0*x + 2.0*y  < 1.0,
       1.0  / (0.4 * 1.0), 1.0*x + 2.0*y  > 2.0,
       1.0  / (0.4 * 1.0), 2.0*x - 1.0*y  < 0.0,
       1.0  / (0.4 * 1.0), 2.0*x - 1.0*y  > 1.0,
#       1.0  / (0.4 * 1.0) , x  > 0.5,
#      1.0 / (0.4 * 1.0) , (x- 0.50)*(x- 0.50)+(y- 0.50)*(y- 0.50) <= 0.01,
#      1.0 / (0.4 * 1.0) , (x- 0.75)*(x- 0.75)+(y- 0.25)*(y- 0.25) <= 0.01,
#      1.0 / (0.4 * 1.0) , (x- 0.75)*(x- 0.75)+(y- 0.75)*(y- 0.75) <= 0.01,
#      1.0 / (0.4 * 1.0) , (x- 0.25)*(x- 0.25)+(y- 0.75)*(y- 0.75) <= 0.01,
                     0.14 / (0.4 * 0.1)  ]; };
    velocity_x    { value = [0.0]; };
    velocity_y    { value = [0.0]; }
}


Field {
    ghosts = 4; # must be even for ProlongLinear
    prolong = "linear";
   refresh {
     rank = 0;
     type = "quiescence";
   }
}


Output {

    file_groups = ["de", "dl", "mesh", "te", "vx", "vy"];

    de {

       field_list = ["density"];
       type     = "image";
#       image_ghost = true;
	schedule = ["time","interval", 0.01];
       colormap = [0.0,0.0,0.0,
                   1.0,0.0,0.0,
                   1.0,1.0,0.0,
                   1.0,1.0,1.0];

    };
    dl {
       image_log = true;
       field_list = ["density"];
       type     = "image";
#       image_ghost = true;
	schedule = ["time","interval", 0.01];
       colormap = [0.0,0.0,0.0,
                   1.0,0.0,0.0,
                   1.0,1.0,0.0,
                   1.0,1.0,1.0];
    };

    te {

       field_list = ["total_energy"];
       type     = "image";
#       image_ghost = true;
	schedule = ["time","interval", 0.01];
       colormap = [0.0,0.0,0.0,
                   1.0,0.0,0.0,
                   1.0,1.0,0.0,
                   1.0,1.0,1.0];
    };

    vx {

       field_list = ["velocity_x"];
       type     = "image";
#       image_ghost = true;
	schedule = ["time","interval", 0.01];
       colormap = [1.0,0.0,0.0,
                   0.0,0.0,0.0,
                   0.0,0.0,1.0];
    };

    vy {

       field_list = ["velocity_y"];
       type     = "image";
#       image_ghost = true;
	schedule = ["time","interval", 0.01];
       colormap = [1.0,0.0,0.0,
                   0.0,0.0,0.0,
                   0.0,0.0,1.0];
    };

    mesh {
#        image_face_rank = 0;
	type     = "image";
	image_type  = "mesh";
	image_reduce_type = "max";
        field_list = ["density"];
	image_block_size  = 5;
	image_size = [513,513];
	schedule = ["time","interval", 0.01];
        colormap = [1.00, 1.00, 1.00,  
                    0.00, 1.00, 0.00, 
                    1.00, 0.00, 0.00, 
                    0.00, 0.00, 1.00];
      }
}

