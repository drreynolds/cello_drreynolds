# Problem: 2D Implosion problem
# Author:  James Bordner (jobordner@ucsd.edu)

   # Domain is the two dimensional box 0 < x,y < 1.0

   Domain { 
      lower = [0.0, 0.0];
      upper = [1.0, 1.0];
   } 

   # The computational mesh is a single uniform grid

   Mesh { 
      root_size      = [96,96];
   }

   Parallel {
      temp_update_all  = false;
      temp_update_full = true;
   }

   # Field parameters include those concerning fields as a group, as
   # well as individual fields
   
   Field {

      ghosts = 3;

      fields = [
	"density",	
	"velocity_x",
	"velocity_y",
	"total_energy"
      ] ;

      # courant condition for fields

      courant   = 0.8;

      padding   = 0;
      alignment = 8;    
   }

   Method {

      # list of methods to apply and in what order
 
      sequence = ["ppm"];

      ppm {

         # method-specific parameters.  Note this is Enzo-P not Cello 

         diffusion   = true;
         flattening  = 3;
         steepening  = true;

         dual_energy = false;
     }
   }

   Physics {

      dimensions = 2;

      gamma = 1.4;

   }

   Initial {
       density       { value = [ 0.125,                x + y < 0.5,
                                 1.0 ]; };
       total_energy  { value = [ 0.14 / (0.4 * 0.125), x + y < 0.5,
	                         1.0  / (0.4 * 1.0) ]; };
       velocity_x    { value = [0.0]; };
       velocity_y    { value = [0.0]; }
   }

   Boundary { type = "reflecting" }

   Stopping {

      time  = 2.5;
      cycle = 200;

      # redshift
   }

   Output { 

      groups = ["cycle_step_test"];

      cycle_step_test {
        file_name      = "enzo-p_1-%06d";
	type           = "image";
	cycle_interval = 100;
      };


   }
 