#----------------------------------------------------------------------
# Problem: 2D include file for EnzoMethodGravityCg test
# Author:  James Bordner (jobordner@ucsd.edu)
#----------------------------------------------------------------------
#
# This file initializes all but the following parameters, which must be initialized by
# the parameter file including this one:
#
#    Mesh : root_blocks
#    Output : phi_png : name
#    Output : rho_png   : name
#    Output : phi_h5  : name
#    Output : rho_h5    : name
#
#----------------------------------------------------------------------

Domain {
   lower = [ 0.0, 0.0 ];
   upper = [ 1.0, 1.0 ];
}

Mesh { 
   root_rank = 2;
   root_size = [512,512];
}

Method {
    list = ["gravity_cg", "ppm"]; 

    gravity_cg {
       refresh = ["refresh_null","refresh_cg"];
       iter_max = 1000;
       res_tol  = 1e-3;
    };

    ppm {
       refresh = "ppm_refresh";
       diffusion   = true;
       flattening  = 3;
       steepening  = true;
       dual_energy = false;
   }
}

Refresh {
    list = ["refresh_null","refresh_cg","ppm_refresh"];
    refresh_null {
         field_face_rank = 0;
         field_list = [];
         field_ghosts = 3;
    };
    refresh_cg {
         field_face_rank = 0;
         field_list = [];
         field_ghosts = 3;
    };
    ppm_refresh { 
        field_face_rank = 0;
        field_list = [];
        field_ghosts = 4;
    }

}

Field {
   
   list = ["density", "potential",
           "acceleration_x",
           "acceleration_y",
	   "total_energy",
           "velocity_x",
           "velocity_y",
           "internal_energy",
	   "pressure",
           "B","X","R","P","AP"];

   ghosts = 4;
   prolong = "poisson";
}

Initial {
   density  { 
      value = [ 1.0, (x - 0.5)*(x - 0.5) + (y - 0.5)*(y - 0.5) < 0.05,
                0.1 ];
   };
   total_energy  { 
      value = [ 1.0, (x - 0.5)*(x - 0.5) + (y - 0.5)*(y - 0.5) < 0.05,
                0.1 ];
   };
   acceleration_x {
      value = [ 100.0 ];
   };
   acceleration_y {
      value = [ 0.0 ];
   };
   pressure { value = 0.0; }
}

Boundary {
   type = "periodic";
} 

Output {
   list = ["phi_png", "rho_png"];
   phi_png {
     type = "image";
     field_list = ["potential"];
     include "input/schedule_cycle_10.incl"
     include "input/colormap_blackbody.incl"
   };
   rho_png {
     type = "image";
     field_list = ["density"];
     include "input/schedule_cycle_10.incl"
     include "input/colormap_blackbody.incl"
   };
   phi_h5 {
     type = "data";
     field_list = ["potential"];
     include "input/schedule_cycle_10.incl"
   };
   rho_h5 {
     type = "data";
     field_list = ["density"];
     include "input/schedule_cycle_10.incl"
   }
}

Stopping { cycle = 1000; }

