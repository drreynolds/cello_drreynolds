([NotesComponentArrayLayout Array:Layout] < [NotesComponentArray Array] > [NotesComponentArrayItBlock Array:ItBlock])

= `Block` Subcomponent =

[[TOC]]

== `Block` class ==

=== Index calculation ===

`Block`s support two ways of calculating indices, ''absolute'' and ''relative''.  There are advantages and disadvantages to each.
Absolute indices allow more flexibility in loop bounds and ordering, are easier to read and visually confirm correctness, and may vectorize better. Relative indices require fewer index computations.  In general, absolute index calculations are to be preferred, but relative ''may'' be faster in some situations.

==== Absolute ====

Assuming an array with unit stride, the absolute index `i` should be computed as follows:

{{{
   Block b;

   // get the block size (nx,ny,nz)

   int nx,ny,nz;
   b.get_size(&nx,&ny,&nz);

   // get the block allocated dimension (dx,dy,dz)

   int dx,dy,dz;  
   b.get_dim(&dx,&dy,&dz);

   for (int iz=0; iz<nz; iz++) {
      for (int iy=0; iy<ny; iy++) {
         for (int ix=0; ix<nx; ix++) {

            i = ix + dx*(iy + dy*iz);

            // loop body here

         }
      }
   }
}}}

==== Relative ====

Assuming an array with unit stride, the relative index `j` should be computed as follows:

{{{ 
   Block b;

   // get the block size (nx,ny,nz)

   int nx,ny,nz;
   b.get_size(&nx,&ny,&nz);

   // get the block increments (dx,dy,dz)

   int dx,dy,dz;  
   b.get_inc(&dx,&dy,&dz);

   int j = 0;

   for (int iz=0; iz<nz; iz++) {
      for (int iy=0; iy<ny; iy++) {
         for (int ix=0; ix<nx; ix++) {

            // ...

            j += dx;
         }
         j += dy - nx*dx;
      }
      j += dz - ny*dy;
   }
}}}

=== Attributes ===
=== Functions ===

 || `(*)` || `Block::Block()`|| ''`Block` constructor'' ||
 || `(*)` || `Block::~Block()`|| ''`Block` destructor'' || 
 || `(*)` || `Block::values()` || ''Return pointer to the start of the block values'' ||
 || `(*)` || `Block::get_dim()` || ''Return allocated block dimensions'' ||
 || `(*)` || `Block::get_size()` || ''Return size of the block'' ||
 || `(*)` || `Block::get_inc()` || ''Return increments for loop index calculations'' ||

=== Usage ===

