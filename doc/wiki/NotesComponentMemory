([NotesComponentField Field] < [NotesComponents index] > [NotesComponentMethod Method])

= Memory Component =

[[TOC]]

== Functions ==

|| ( ) ||  `Memory::new_group(group_id,group_name)` || ''Assign a name to a group id'' ||

|| ( ) ||  `Memory::begin_group(group_id)` || ''Begin allocating memory associated with the given group'' ||
|| ( ) ||  `Memory::end_group(group_id)` || ''End allocating memory associated with the given group'' ||
|| ( ) ||  `Memory::current_group()` || ''Return the name of the currently active group'' ||
|| ( ) ||  `Memory::current_handle()` || ''Return the handle for the currently active group'' ||

|| ( ) ||  `Memory::bytes([group_id])` || ''Current number of local bytes allocated'' ||
|| ( ) ||  `Memory::available([group_id])` || ''Estimate of amount of local memory left'' ||
|| ( ) ||  `Memory::efficiency([group_id])` || ''Estimate of ratio of current local usage to local available'' ||
|| ( ) ||  `Memory::highest([group_id])` || ''Maximum number of local bytes allocated for group'' ||
|| ( ) ||  `Memory::set_limit(size [,group_id])` || ''Set limit on number of local bytes available'' ||
|| ( ) ||  `Memory::get_limit([group_id])` || ''Get limit on number of local bytes available'' ||
|| ( ) ||  `Memory::num_new([group_id])` || ''Return the number of calls to allocate for the group'' ||
|| ( ) ||  `Memory::num_delete([group_id])` || ''Return the number of calls to deallocate for the group'' ||

|| ( ) ||  `Memory::print()` || ''Print summary of memory usage'' ||
|| ( ) ||  `Memory::reset()` || ''Clear number of bytes and highest'' ||
|| ( ) ||  `Memory::set_active(is_active)` || ''Activate or deactivate memory tracking
'' ||
== Parameters ==


|| ( ) || `limit_available` || ''Set limit on the number of local bytes available for dynamic memory'' ||
|| ( ) || `efficiency_threshold` || ''Set efficiency threshold before displaying a warning message'' ||
|| ( ) || `fill_after_allocate` || ''Value to fill memory after it's allocated'' ||
|| ( ) || `fill_before_deallocate` || ''Value to fill memory before it's deallocated'' ||
|| ( ) || `tracking` || ''Set memory tracking on or off.  Turning off resorts to native new[]/delete[].' ||

== Exceptions ==

|| ( ) || `ExceptionBadMemoryAllocate` || ''Error while allocating memory'' ||
|| ( ) || `ExceptionBadMemoryDeallocate` || ''Error while deallocating memory'' ||

([NotesComponentField Field] < [NotesComponents index] > [NotesComponentMethod Method])