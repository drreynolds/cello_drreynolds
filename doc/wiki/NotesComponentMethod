([NotesComponentMemory Memory] < [NotesComponents index] > [NotesComponentMonitor Monitor])

= `Method` Component =

[[TOC]]

The `Method` components defines the interface to user-written numerical methods.  
Specifically, `MethodHyperbolic` defines the interface for hyperbolic methods applied for one timestep on a uniform grid patch, 
and `MethodElliptic` defines the interface for elliptic problems applied for one timestep on an `Amr` hierarchy.  Functions supporting 
applying the method on an AMR hierarchy are included, such as method-specific handling of
boundary conditions, and functions applied to level boundaries, such as flux-correction.n

[[Image(htdocs:gedeckt-ppm-ppml-rate.png)]]

== `Method` types ==

|| `Method` || ''Parent base class'' ||
|| `MethodHyperbolic` || ''Hyperbolic method base class'' ||
|| `MethodElliptic` || ''Elliptic method base class'' ||


=== `Method` class ===

==== Functions ====

|| || `+ Method::Method()`       || ''Create a new method'' ||
|| || `+ Method::initialize()`   || ''Initialize the method ''||
|| || `+ Method::apply()`        || ''Apply the method'' ||
|| || `# Method::add_argument()` || ''Specify a `Field` or `Particle` type and its access type''||

==== Attributes ====


==== Parameters ====

([NotesComponentMemory Memory] < [NotesComponents index] > [NotesComponentMonitor Monitor])