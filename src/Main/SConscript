Import('env')
Import('type')

components = [
   'enzo',
   'simulation','method',
   'mesh','field',
   'memory','parallel',
   'parameters','monitor',
   'error','cello']

env = env.Clone(LIBS=[components])

includes = ['main.hpp']
sources  = [Glob('main*cpp')]

if (type == "charm"):
   env.CharmBuilder('main.decl.h','main.ci',ARG = 'main')
   env.CharmBuilder('main.def.h', 'main.ci',ARG = 'main')
   includes = includes + ['main.decl.h','main.def.h']

   env.CharmBuilder('main_enzo.decl.h','main_enzo.ci',ARG = 'main_enzo')
   env.CharmBuilder('main_enzo.def.h', 'main_enzo.ci',ARG = 'main_enzo')
   includes = includes + ['main_enzo.decl.h','main_enzo.def.h']

   env.CharmBuilder ('main_simulation.decl.h','main_simulation.ci',ARG = 'main_simulation')
   env.CharmBuilder ('main_simulation.def.h', 'main_simulation.ci',ARG = 'main_simulation')
   includes = includes + ['main_simulation.decl.h','main_simulation.def.h']

   env.CharmBuilder('main_mesh.decl.h','main_mesh.ci',ARG = 'main_mesh')
   env.CharmBuilder('main_mesh.def.h', 'main_mesh.ci',ARG = 'main_mesh')
   includes = includes + ['main_mesh.decl.h','main_mesh.def.h']

libraries = [env.Library ('main', [sources])]


env.Alias('install-lib', env.Install ('#/lib/'+type,libraries))
env.Alias('install-inc', env.Install ('#/include',includes))
