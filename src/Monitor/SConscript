#------------------------------
# IMPORTS
#------------------------------

Import('env')
Import('type')

#------------------------------
# DEPENDENCIES
#------------------------------

components = ['parallel',
	      'error','monitor','performance',
	      'test','cello']
libraries  = ['png']

#------------------------------
# SOURCE
#------------------------------

includes   = [Glob('monitor*hpp'), Glob('png*h')]
sources    = [Glob('monitor*cpp'), Glob('png*cpp')]

#------------------------------
# ENVIRONMENTS
#------------------------------

env        = env.Clone(LIBS=[components,libraries])

#------------------------------
# TARGETS
#------------------------------

libraries  = env.Library ('monitor', [sources])

if (type == "charm"):
	sources = sources + ["../Main/main.cpp"]

binaries   = env.Program (['test_Monitor.cpp', sources])

#------------------------------
# INSTALL
#------------------------------

env.Alias('install-inc',env.Install ('#/include',  includes))
env.Alias('install-lib',env.Install ('#/lib/'+type,libraries))
env.Alias('install-bin',env.Install ('#/bin/'+type,binaries))





