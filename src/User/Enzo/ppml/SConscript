Import('env')

components = ['disk', 'memory', 'monitor']

libraries  = ['hdf5', 'gfortran', 'png']

#-D NO_OPTIMIZE_CELL_WIDTH -Dp8 -Dr8 -DSMALL_INTS -DLINUX

env = env.Clone(LIBS=[components,libraries], CPPFLAGS='-D NO_OPTIMIZE_CELL_WIDTH -Dp8 -Dr8 -DSMALL_INTS -DLINUX')

# includes = []

# env.Alias('install-inc',env.Install ('$CPPPATH',includes))

sources  = [
	'cello_hydro.cpp',
	'CosmologyComputeExpansionFactor.cpp',
	'CosmologyComputeExpansionTimestep.cpp',
	'data_dump.cpp',
	'image_dump.cpp',
        'Grid_ComputeTimeStep.cpp',
	'Grid_SetExternalBoundaryValues.cpp',
	'Grid_SolveMHDEquations.cpp',
	'initialize_hydro.cpp',
        'initialize_ppml.cpp',
 	'initialize_ppml_implosion3.cpp',
	'PPML_Conservative.F',
	'PPML_HLLD.F',
	'PPML_MAIN.F',
	'PPML_monot.F',
	'PPML_potokx.F',
	'PPML_potoky.F',
	'PPML_potokz.F',
	'PPML_Primitive.F',
	'PPML_sub.F',
	'PPML_TimeStep.F',
	'SetExternalBoundary.cpp']

lib_user = env.Library ('user-enzo-ppml', [sources])

# env.Alias('install-lib',env.Install ('$LIBPATH','libuser-enzo-ppml.a'))

test_ppml   = env.Program (['test_ppml.cpp',   sources])

env.Alias('install-bin', env.Install ('$BINPATH', [test_ppml]))







