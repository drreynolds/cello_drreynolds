#------------------------------
# IMPORTS
#------------------------------

Import('env')
Import('parallel_type')

#------------------------------
# DEPENDENCIES
#------------------------------

# (uses Mesh for test_FieldBlock, which requires DataBlock)

components = ['mesh','cello','error']

#------------------------------
# ENVIRONMENTS
#------------------------------

env = env.Clone(LIBS=components)

#------------------------------
# SOURCE
#------------------------------

includes = [Glob('field*hpp')]
sources  = [Glob('field*cpp')]

#------------------------------
# TARGETS
#------------------------------

libraries              = env.Library ('field', [sources])
test_field_block       = env.Program (['test_FieldBlock.cpp',  sources])
test_field_descr       = env.Program (['test_FieldDescr.cpp',  sources])
test_field_block_faces = env.Program (['test_FieldFaces.cpp',  sources])

binaries = [test_field_block, test_field_descr, test_field_block_faces]

if (parallel_type == "charm"):
	test = 'test_FieldBlock'
	env.CharmBuilder(test + '.decl.h',test + '.ci',ARG = test)
	env.Depends(env.Object(test + '.cpp'),test + '.decl.h')
	test = 'test_FieldDescr'
	env.CharmBuilder(test + '.decl.h',test + '.ci',ARG = test)
	env.Depends(env.Object(test + '.cpp'),test + '.decl.h')
	test = 'test_FieldFaces'
	env.CharmBuilder(test + '.decl.h',test + '.ci',ARG = test)
	env.Depends(env.Object(test + '.cpp'),test + '.decl.h')

#------------------------------
# INSTALL
#------------------------------

env.Alias('install-inc',env.Install ('#/include',includes))
env.Alias('install-lib',env.Install ('#/lib',    libraries))
env.Alias('install-bin',env.Install ('#/bin',    binaries))
env.Alias('install-bin',env.Install ('#/bin-'+parallel_type,binaries))




