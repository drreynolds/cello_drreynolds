#------------------------------
# IMPORTS
#------------------------------

Import('env')
Import('type')
Import('use_papi')

#------------------------------
# DEPENDENCIES
#------------------------------

# (uses Mesh for test_FieldBlock, which requires DataBlock)

components = ['simulation','method','io',
              'mesh',
              'parallel','disk',
              'parameters', 
              'error', 'monitor','performance','memory',
              'test','cello']

if (use_papi):
	components = components + ['papi','pfm']

libraries  = ['png','hdf5']

#------------------------------
# SOURCE
#------------------------------

includes = [Glob('field*hpp')]
sources  = [Glob('field*cpp')]

#------------------------------
# ENVIRONMENTS
#------------------------------

env = env.Clone(LIBS=[components,libraries])

#------------------------------
# TARGETS
#------------------------------

libraries        = env.Library ('field', [sources])
if (type == "charm"):
	sources = sources + ["../main_simulation.cpp"]

test_field_block = env.Program (['test_FieldBlock.cpp',  sources])
test_field_descr = env.Program (['test_FieldDescr.cpp',  sources])
test_field_face  = env.Program (['test_FieldFace.cpp',  sources])
test_it_field    = env.Program (['test_ItField.cpp',  sources])

binaries = [test_field_block, test_field_descr, test_field_face, test_it_field]

#------------------------------
# INSTALL
#------------------------------

env.Alias('install-inc',env.Install ('#/include',  includes))
env.Alias('install-lib',env.Install ('#/lib/'+type,libraries))
env.Alias('install-bin',env.Install ('#/bin/'+type,binaries))




