// See LICENSE_CELLO file for license and copyright information

/// @file     mesh.ci
/// @author   James Bordner (jobordner@ucsd.edu)
/// @date     2011-05-09
/// @brief    CHARM++ Mesh process group

module mesh {

//  extern module simulation;
//  extern module main;

//  readonly CProxy_BlockReduce  proxy_block_reduce;
  
  chare BlockReduce {
    entry BlockReduce();
    entry void p_prepare (int count_blocks, int cycle, double time,
			  double dt_block, int stop_block);

    entry void p_output_reduce (int count_blocks);
  };

  array[3D] Block {

    entry Block
      (int nbx, int nby, int nbz,
       int nx, int ny, int nz,	
       double xm, double ym, double zm,
       double hx, double hy, double hz,
       int num_field_blocks);

    entry void p_initial();
    entry void p_compute(double dt, int axis_set);
    entry void p_refresh(int cycle, double time, double dt, int axis_set);
    entry void p_refresh_face(int n, char buffer[n], int axis, int face, int axis_face);
    entry void p_output (int index_output);
 
    //     void p_next();
    //     void p_prepare();

  };
}

