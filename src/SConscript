Import('env')

# Define tests for running cccc

# cccc      = Builder(action = "cccc --outdir=$TARGET `find src -name '*.cpp'`")
# env = Environment(BUILDERS = {'Cccc': cccc})
# env.Cccc("cccc");

SConscript('Enzo/SConscript')

SConscript('Data/SConscript')
SConscript('Disk/SConscript')
SConscript('Distribute/SConscript')
SConscript('Error/SConscript')
SConscript('Field/SConscript')
SConscript('Global/SConscript')
SConscript('Memory/SConscript')
SConscript('Mesh/SConscript')
# SConscript('Method/SConscript')
SConscript('Monitor/SConscript')
SConscript('Parallel/SConscript')
SConscript('Parameters/SConscript')
SConscript('Particle/SConscript')
SConscript('Performance/SConscript')
SConscript('Portal/SConscript')
SConscript('Schedule/SConscript')
SConscript('Simulation/SConscript')
SConscript('Task/SConscript')
SConscript('Test/SConscript')
SConscript('User/SConscript')


components = ['schedule',
              'error',
              'parallel',
              'memory',
              'monitor',
              'parameters',
              'simulation', 
              'enzo',
              'user',
              'data',
              'field',
              'global',
              'user-ppm', 
              'user-ppml',
              'cello', 
              '$FORTRANLIBS']

libraries  = ['png','boost_thread-mt']


env = env.Clone(LIBS=[components,libraries])


binaries = env.Program(['cello.cpp'])

includes = [Glob('cello*hpp'), 'config.def']
sources  = [Glob('cello*cpp')]

libraries = env.Library ('cello', [sources])

env.Alias('install-lib', env.Install ('#/lib',    libraries))
env.Alias('install-inc', env.Install ('#/include',includes))
env.Alias('install-bin', env.Install ('$BINPATH', binaries))
