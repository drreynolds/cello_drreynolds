#------------------------------
# IMPORTS
#------------------------------

Import('env')
Import('parallel_type')
Import('use_papi')

#------------------------------
# DEPENDENCIES
#------------------------------


components = ['error','monitor','cello']
libraries  = ['png']
if (use_papi):
	libraries = libraries + ['papi','pfm']

#------------------------------
# ENVIRONMENTS
#------------------------------

env = env.Clone(LIBS=[components,libraries])

#------------------------------
# SOURCE
#------------------------------

includes = [Glob('performance*hpp')]
sources  = [Glob('performance*cpp')]

#------------------------------
# TARGETS
#------------------------------

libraries        = env.Library ('performance', [sources])
test_performance = env.Program(['test_Performance.cpp', sources])
test_papi        = env.Program(['test_Papi.cpp', sources])
time_matvec      = env.Program(['time_matvec.cpp',      sources])

binaries = [test_performance,test_papi,time_matvec]

if (parallel_type == "charm"):
	test = 'test_Performance'
	env.CharmBuilder(test + '.decl.h',test + '.ci',ARG = test)
	env.Depends(env.Object(test + '.cpp'),test + '.decl.h')
	test = 'time_matvec'
	env.CharmBuilder(test + '.decl.h',test + '.ci',ARG = test)
	env.Depends(env.Object(test + '.cpp'),test + '.decl.h')
	test = 'test_Papi'
	env.CharmBuilder(test + '.decl.h',test + '.ci',ARG = test)
	env.Depends(env.Object(test + '.cpp'),test + '.decl.h')

#------------------------------
# INSTALL
#------------------------------

env.Alias('install-inc',env.Install ('#/include',includes))
env.Alias('install-lib',env.Install ('#/lib',    libraries))
env.Alias('install-bin',env.Install ('#/bin',    binaries))
env.Alias('install-bin',env.Install ('#/bin-'+parallel_type,binaries))




