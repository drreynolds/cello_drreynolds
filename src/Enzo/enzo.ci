// $Id: simulation.ci 1696 2010-08-04 05:56:36Z bordner $
// See LICENSE_CELLO file for license and copyright information

/// @file     enzo.ci
/// @author   James Bordner (jobordner@ucsd.edu)
/// @date     2011-03-24
/// @brief    EnzoSimulationCharm CHARM++ Simulation process group

mainmodule enzo {

  readonly CProxy_Main                 proxy_main;
  readonly CProxy_EnzoSimulationCharm  proxy_simulation;

  mainchare Main {

    entry Main(CkArgMsg *m);

    entry void p_exit   (int count);

    //  --- Open image file and and initialize image data ---

    entry void p_output_open (int count, int index, int cycle, double time);

    //  --- Accumulate block output contributions and write output to disk ---

    entry void p_output_close (int count);

  };

  group EnzoSimulationCharm {

    entry EnzoSimulationCharm(const char filename[n], int n, 
			      int index_simulation);

    //  --- Monitor, Output ---

    entry void p_prepare ();

    //  --- Called by main; request output from all blocks ---

    entry void p_output (int index, int cycle, double time);

  };

  array[3D] Block {

    entry Block
      (int nx, int ny, int nz,
       double xm, double ym, double zm,
       double hx, double hy, double hz,
       int num_field_blocks);

  };

  array[3D] EnzoBlock {

    entry EnzoBlock
      (int nx, int ny, int nz,
       double xm, double ym, double zm,
       double hx, double hy, double hz,
       int num_field_blocks);


    entry void p_initial();

    // --- Compute block output contribution ---
    entry void p_output();

    //     void p_next();
    //     void p_prepare();
    //     void p_compute();
  };

};

