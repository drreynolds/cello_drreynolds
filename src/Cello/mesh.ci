// See LICENSE_CELLO file for license and copyright information

/// @file     mesh.ci
/// @author   James Bordner (jobordner@ucsd.edu)
/// @date     2011-05-09
/// @brief    CHARM++ Mesh process group

module mesh {

  //  extern module simulation;
  //  extern module main;

  //  readonly CProxy_BlockReduce  proxy_block_reduce;
  
  chare BlockReduce {
    entry BlockReduce();
    entry void entry_output_reduce (int count_blocks);
  };

  array[3D] Block {

    entry Block
      (int ibx, int iby, int ibz,
       int nbx, int nby, int nbz,
       int nx, int ny, int nz,	
       double xpm, double ypm, double zpm,
       double xb, double yb, double zb,
       int num_field_blocks);

    entry Block
      (int nbx, int nby, int nbz,
       int nx, int ny, int nz,	
       double xpm, double ypm, double zpm,
       double xb, double yb, double zb,
       int num_field_blocks);

    entry void entry_initial();
    entry void entry_refresh(int cycle, double time, double dt);
    entry void entry_compute(int cycle, double time, double dt);
    entry void entry_refresh_face
      (int n, char buffer[n], int fx, int fy, int fz);
    entry void entry_write (int index_output);
    entry void entry_read ();

    entry void entry_call_refresh();
    entry void entry_call_output(CkReductionMsg * msg);

  };
}

