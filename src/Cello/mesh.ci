// See LICENSE_CELLO file for license and copyright information

/// @file     mesh.ci
/// @author   James Bordner (jobordner@ucsd.edu)
/// @date     2011-05-09
/// @brief    CHARM++ Mesh process group

module mesh {

  PUPable Config;
  PUPable Factory;
  PUPable Initial;
  PUPable InitialDefault;
  PUPable InitialFile;
  PUPable InputData;
  PUPable OutputData;
  PUPable OutputImage;
  PUPable OutputRestart;
  PUPable Problem;
  PUPable Refine;
  PUPable RefineSlope;
  PUPable RefineMass;
  PUPable ItFieldList;
  PUPable ItFieldRange;

  array[Index] CommBlock {

    entry CommBlock
      (Index index,
       int nx, int ny, int nz,	
       int level,
       int num_field_blocks,
       int count_adapt,
       bool testing);

    entry CommBlock();	

//    entry void p_initial();
    entry void p_refresh();
    entry void p_write (int index_output);
    entry void p_compute(int cycle, double time, double dt);

    entry void x_refresh(int n, char buffer[n], int fx, int fy, int fz);

    entry void p_read (int index_input);

    entry void p_output(CkReductionMsg * msg);

    entry void p_adapt_enter ();
    entry void p_adapt (int count_adapt);
    entry void p_refine ();
    entry void p_set_neighbor(Index index);
    entry void p_delete_neighbor(Index index);
    entry void p_set_nibling(Index index);
    entry void p_delete_nibling(Index index);
    entry void p_child_can_coarsen(int ic);
    entry void p_balance();
    entry void q_adapt_exit();
    entry void q_adapt();

    entry void p_print(std::string);
  };
}

