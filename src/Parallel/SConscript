
#------------------------------
# IMPORTS
#------------------------------

Import('env')
Import('type')

#------------------------------
# DIRECTORIES
#------------------------------

if (type == "charm"):
	SConscript('jacobi/SConscript')

#------------------------------
# DEPENDENCIES
#------------------------------

components = ['monitor',
	      'performance','error',
	      'cello']
libraries  = ['png']

#------------------------------
# ENVIRONMENTS
#------------------------------

env = env.Clone(LIBS=[components,libraries])

#------------------------------
# SOURCE
#------------------------------

includes   = [Glob('parallel*hpp'),'parallel.def']
sources    = [Glob('parallel*cpp')]

#------------------------------
# TARGETS
#------------------------------

libraries = env.Library ('parallel', [sources])
binaries = []

if (type == "charm"):
	sources = sources + ["../main.cpp"]

test_GroupProcess  =  env.Program (['test_GroupProcess.cpp',    sources])

binaries.append(test_GroupProcess)

if (type == "mpi"):
	test_Mpi = env.Program (['test_Mpi.cpp',      sources])
	binaries.append(test_Mpi)

# test_ParallelAffinity = env.Program (['test_ParallelAffinity.cpp', sources])
test_Layout   = env.Program (['test_Layout.cpp',   sources])

binaries.append(test_Layout)

#------------------------------
# INSTALL
#------------------------------

env.Alias('install-inc',env.Install ('#/include',  includes))
env.Alias('install-lib',env.Install ('#/lib',      libraries))
env.Alias('install-bin',env.Install ('#/bin/'+type,binaries))


