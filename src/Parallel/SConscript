
#------------------------------
# IMPORTS
#------------------------------

Import('env')
Import('parallel_type')


#------------------------------
# DIRECTORIES
#------------------------------

if (parallel_type == "charm"):
	SConscript('jacobi/SConscript')

#------------------------------
# DEPENDENCIES
#------------------------------

libraries  = ['error','png']

#------------------------------
# ENVIRONMENTS
#------------------------------

env = env.Clone(LIBS=[libraries])

#------------------------------
# SOURCE
#------------------------------

includes   = [Glob('parallel*hpp'),'parallel.def']
sources    = [Glob('parallel*cpp')]

if (parallel_type == "charm"):
	test = 'test_Layout'
	env.CharmBuilder(test + '.decl.h',test + '.ci',ARG = test)
	env.Depends(env.Object(test + '.cpp'),test + '.decl.h')

#------------------------------
# TARGETS
#------------------------------

if (parallel_type == "charm"):
	test = 'test_GroupProcess'
	env.CharmBuilder(test + '.decl.h',test + '.ci',ARG = test)
	env.Depends(env.Object(test + '.cpp'),test + '.decl.h')

libraries = env.Library ('parallel', [sources])
tests = []

test_GroupProcess  =  env.Program (['test_GroupProcess.cpp',    sources])
tests.append(test_GroupProcess)

if (parallel_type == "mpi" or parallel_type == "ampi"):
	test_Mpi              = env.Program (['test_Mpi.cpp',      sources])
	tests.append(test_Mpi)

# test_ParallelAffinity = env.Program (['test_ParallelAffinity.cpp', sources])
test_Layout   = env.Program (['test_Layout.cpp',   sources])

tests.append(test_Layout)

#------------------------------
# INSTALL
#------------------------------

env.Alias('install-inc',env.Install ('#/include',includes))
env.Alias('install-lib',env.Install ('#/lib',    libraries))
env.Alias('install-bin',env.Install ('#/bin',    tests))


