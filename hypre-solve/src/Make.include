SHELL = /bin/bash

EXES = enzo-reduce hypre-solve hypre-init hypre-test hypre-png debug-matrix enzo2hypre
#EXES = enzo-reduce

CPPFLAGS = -g -Wall
# CPPFLAGS = -g

# JBPERF

#--------------------------------
JBDEF = 
JBINC = 
JBLIB = 
#--------------------------------
JBDEF = -DUSE_JBPERF
JBINC = -I$(HOME)/lcaperf/include 
JBLIB = -L$(HOME)/lcaperf/lib -ljbperf
#--------------------------------

# LIBPNG

PNGDEF = -DNO_FREETYPE
PNGINC = 
PNGLIB = -lpng

# HDF5

HDF5DEF = 
HDF5INC = -I/usr/local/hdf5/include
HDF5LIB = -L/usr/local/hdf5/lib -lhdf5

# CELLO

CELLOTOP = ../..
CELLOOBJ = $(CELLOTOP)
CELLOINC = -I$(CELLOTOP)/include
CELLOLIB = -L$(CELLOTOP)/lib -lcello

# Assemble defines, includes, and libs
DEF =      $(JBDEF) $(PNGDEF) $(HYPREDEF) $(HDF5DEF) $(CELLODEF) -DUSE_MPI
INC =      $(JBINC) $(PNGINC) $(HYPREINC) $(HDF5INC) $(CELLOINC)
LIB =  -lm $(JBLIB) $(PNGLIB) $(HYPRELIB) $(HDF5LIB) $(CELLOLIB)

# Set object files
OBJS_ALL = \
       constants.o \
       domain.o \
       faces.o \
       grid.o \
       hierarchy.o \
       hypre.o \
       level.o \
       mpi.o \
       parameters.o \
       point.o \
       problem.o

OBJS_INIT  = hypre-init.o
OBJS_TEST  = hypre-test.o
OBJS_SOLVE = hypre-solve.o $(OBJS_ALL)
OBJS_PNG  = hypre-png.o grid.o mpi.o domain.o faces.o pngwriter.o

all: $(EXES)

hypre-init: $(OBJS_INIT)
	$(CPP) -o hypre-init $(OBJS_INIT) $(LIB)
hypre-test: $(OBJS_TEST)
	$(MPCPP) -o hypre-test $(OBJS_TEST) $(LIB)
hypre-solve: $(OBJS_SOLVE)
	$(MPCPP) -o hypre-solve $(OBJS_SOLVE) $(LIB)
hypre-png: $(OBJS_PNG)
	$(MPCPP) -o hypre-png $(OBJS_PNG) $(LIB)
debug-matrix: debug-matrix.o
	$(CPP) -o debug-matrix debug-matrix.o
enzo2hypre: enzo2hypre.o
	$(CPP) -o enzo2hypre enzo2hypre.o $(INC) $(LIB)
enzo-reduce: enzo-reduce.o
	$(MPCPP) -o enzo-reduce enzo-reduce.o $(LIB)

BIN = ../bin
.PHONY: install
install: $(EXES)
	(if [ ! -e $(BIN) ]; then mkdir $(BIN); fi)
	cp $(EXES)  $(BIN)

.cpp.o:
	$(MPCPP) -c -o $*.o $*.cpp $(CPPFLAGS) $(INC) $(DEF)

.PHONY: dep
dep:
	-@(makedepend -fDEPEND *.cpp *.hpp) >& /dev/null

include DEPEND

.PHONY: clean
clean:
	rm -f *.o $(EXES) *~ \#*
	rm -rf html

.PHONY: doc
doc:
	doxygen
	cp doxygen.css html

.PHONY: clean-doc
clean-doc:
	rm -rf html latex


