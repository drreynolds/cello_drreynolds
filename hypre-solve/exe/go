#!/bin/csh -f

if ( $1 == "" || $2 != "") then
   echo "Usage: $0:t <type>"
else
   set type = $1
endif

# Include file defining "$LGPS" (level grids procs size) and "$plot_types" arrays

source include.$type

set HYPRESOLVE_HOME = $HOME/cello/hypre-solve

set BIN  = $HYPRESOLVE_HOME/bin
set SRC  = $HYPRESOLVE_HOME/src
set EXE  = $HYPRESOLVE_HOME/exe

set NAME = hypre-solve
set EXEC = ${BIN}/${NAME}

rm -f $EXEC
printf "Compiling..."
make -C $SRC install >& out.make
echo


#================================================================
# RUN TESTS FROM include.$type
#================================================================

set first_problem = 1
set i = 1
while ($i <= $#LGPS)

   set levels = $LGPS[$i]
   @ i = $i + 1
   set grids   = $LGPS[$i]
   @ i = $i + 1
   set np0   = $LGPS[$i]
   @ i = $i + 1
   set np1   = $LGPS[$i]
   @ i = $i + 1
   set np2   = $LGPS[$i]
   @ i = $i + 1
   set size   = $LGPS[$i]
   @ i = $i + 1


   @ np = $np0 * $np1 * $np2
   set test = L${levels}.G${grids}.P${np0}${np1}${np2}.N${size}

   set TEST = $EXE/$test
   rm -rf $TEST
   mkdir $TEST

   #----------------------------------------------------------------------
   # Execute the test

   cd $TEST

   printf "%-20s" "${test}"

   cp $EXE/in.${test} $TEST
   cp $EXE/in.problem $TEST

   mpirun -np ${np} $EXEC $EXE/in.${test} >& $TEST/out.${test}

   awk 'BEGIN {c="Fail"}; /End '"$NAME"'/{c="Pass"}; END{print c}' out.${test}

   #----------------------------------------------------------------------
   # Generate plots

   foreach plot_type ($plot_types)

      set lcaperf_dir = (JBPERF.*)
      if ($#lcaperf_dir > 1) then
         set lcaperf_dir = $lcaperf_dir[$#lcaperf_dir]
         echo "WARNING: More than one JBPERF.??? directory--using newest"
      endif
   
      cd $lcaperf_dir

      set lcaperf_files = ($TEST/JBPERF.???/?/?/?/?/?.HS)
               # Find the datafiles
   
      set np = $#lcaperf_files

      if ($#lcaperf_files > 1) then
         echo "Found $#lcaperf_files lcaperf files: using rank 0"
         set lcaperf_files = $lcaperf_files[1]
      endif

      if ($plot_type == "size-time") then

         # Accumulate size-time data
   
         set region = 0-total
         set outdata = $EXE/size-time.data

         if ($first_problem) then
           rm $outdata
           set first_problem = 0
         endif

         foreach infile ($lcaperf_files)
            jb-global problem-size $size < $infile | jb-convert g2a problem-size > tmpfile
         
            cat tmpfile \
            | jb-region $region \
            | jb-columns problem-size time-real-incl >> $outdata
         end

      else if ($plot_type == "procs-time") then

         # Accumulate procs-time data
   
         set region = 0-total
         set outdata = $EXE/size-time.data

         if ($first_problem) then
           rm $outdata
           set first_problem = 0
         endif

         foreach infile ($lcaperf_files)
            jb-global problem-size $size < $infile | jb-convert g2a problem-size > tmpfile
         
            cat tmpfile \
            | jb-region $region \
            | jb-columns problem-size time-real-incl >> $outdata
         end

      else if ($plot_type == "total-mem") then
         echo "Unimplemented plot type $plot_type"
      else
         echo "Unknown plot type "'"'"$plot_type"'"'
      endif
   end

end

#----------------------------------------------------------------------
# Plot size-time
#----------------------------------------------------------------------

set outdata = $EXE/size-time.data
set outpng  = $EXE/size-time.png
gnuplot <<EOF
set output '$outpng'
set terminal png large size 800,600
set title 'Serial unigrid time per zone'
set xlabel 'N^{1/3}'
set ylabel 'ms per zone'
plot '$outdata' using (\$1):(\$2/\$1/\$1/\$1) title 'run' w lp
EOF


