#!/bin/tcsh -f

#-----------------------------------------------------------------------
# Generate plots for hypre-solve runs
#
# Usage: 
#
#      plot <plot type> <problem directories>
#
# Assumes output of runs are in directories L*
#
#-----------------------------------------------------------------------

if ( $2 == "") then
   echo "Usage: $0:t [size-time|procs-time|total-mem] <problem directories>"
else
   set plot_type = $argv[1]
   shift argv
   set problems = ($argv)
endif

set first_problem = 1
set i = 1

set directory = `pwd`

foreach problem ($problems)

   cd $directory
   cd $problem
   set lcaperf_dir = (JBPERF.*)

   if ($#lcaperf_dir > 1) then
      set lcaperf_dir = $lcaperf_dir[$#lcaperf_dir]
      echo "WARNING: More than one JBPERF.??? directory--using newest"
   endif

   cd $lcaperf_dir

   set lcaperf_files = (?/?/?/?/?.HS)
            # Find the datafiles
   
   set np = $#lcaperf_files

   if ($#lcaperf_files > 1) then
      echo "Found $#lcaperf_files lcaperf files: using rank 0"
      set lcaperf_files = $lcaperf_files[1]
   endif

#-----------------------------------------------------------------------
   if ($plot_type == "size-time") then
#-----------------------------------------------------------------------

      # Accumulate size-time data

      set region = 0-total
      set outdata = $directory/size-time.data

      if ($first_problem) then
        rm -f $outdata
        set first_problem = 0
      endif

      foreach infile ($lcaperf_files)
         cat $infile \
         | jb-convert g2a problem-size \
         | jb-region $region \
         | jb-columns problem-size time-real-incl >> $outdata
      end

#-----------------------------------------------------------------------
   else if ($plot_type == "procs-time") then
#-----------------------------------------------------------------------

      # Accumulate procs-time data
   
      set region = 0-total
      set outdata = $directory/procs-time.data

      if ($first_problem) then
        rm -f $outdata
        set first_problem = 0
      endif

      foreach infile ($lcaperf_files)
         jb-convert g2a processor-count < $infile > tmpfile
         
         cat tmpfile \
         | jb-region $region \
         | jb-columns processor-count time-real-incl >> $outdata
      end

#-----------------------------------------------------------------------
   else if ($plot_type == "total-mem") then
#-----------------------------------------------------------------------
      echo "Unimplemented plot type $plot_type"
#-----------------------------------------------------------------------
   else # Unknown plot type
#-----------------------------------------------------------------------
      echo "Unknown plot type "'"'"$plot_type"'"'
   endif

end

#----------------------------------------------------------------------
# Plot size-time
#----------------------------------------------------------------------

if ($plot_type == "size-time") then
   set outdata = $directory/size-time.data
   sort -n $outdata > t; mv t $outdata
   set outpng  = $directory/size-time.png
   gnuplot <<EOF
   set output '$outpng'
   set terminal png large size 800,600
   set title 'Problem size versus unigrid time per zone'
   set xlabel 'N^{1/3}'
   set ylabel 'ms per zone'
   plot [][0:] '$outdata' using (\$1):(\$2/\$1/\$1/\$1) title 'run' w lp
EOF
endif

#----------------------------------------------------------------------
# Plot procs-time
#----------------------------------------------------------------------

if ($plot_type == "procs-time") then
   set outdata = $directory/procs-time.data
   sort -n $outdata > t; mv t $outdata
   set outpng  = $directory/procs-time.png
   gnuplot <<EOF
   set output '$outpng'
   set terminal png large size 800,600
   set title 'Processor count versus unigrid time per zone'
   set xlabel 'processors'
   set ylabel 'ms per zone'
   plot [][0:] '$outdata' using (\$1):(\$2/\$1/\$1/\$1) title 'run' w lp
EOF
endif



