#!/bin/csh -f

# Error check input parameters

if ($1 != "" || $3 != "") then
   echo "Usage: $0:h"
   exit 1
endif

set problem_sizes = (8 16 32 64 128)

set regions = (0-total 1-problem 2-grids 3-faces 4-hypre-init 5-hypre-solve)

set top_dir = `pwd`

rm $top_dir/total-time.data
rm $top_dir/total-jbmem.data

foreach N ($problem_sizes)

   set problem_dir = L1.G1.P111.N${N}

   cd $top_dir

   # Find the newest JBPERF directory $jbperf_dir
   
   cd $problem_dir
   
   set jbperf_dir = (JBPERF.*)
   
   if ($#jbperf_dir > 1) then
      set jbperf_dir = $jbperf_dir[$#jbperf_dir]
      echo "WARNING: More than one JBPERF.??? directory--using the newest ($jbperf_dir)"
   endif
   
   cd $jbperf_dir

   # Find the datafiles
   
   set jbperf_files = (?/?/?/?/?.HS)
   
   if ($#jbperf_files > 1) then
      echo "ERROR: Parallel runs not implemented yet"
      exit 1
   endif

   if ($#jbperf_files == 1) then
   
      # basic time-real-start
      # basic time-real-stop
      # basic time-real-incl
      # 
      # basic MPI-time
      # 
      # basic jbmem-bytes-curr
      # basic jbmem-bytes-high
      
      #----------------------------------------------------------------------
      # Accumulate total-time data
      #----------------------------------------------------------------------
   
      set region = 0-total
      set outdata = $top_dir/total-time.data
   
      foreach infile ($jbperf_files)
         jb-global problem-size $N < $infile | jb-convert g2a problem-size > tmpfile
         
         cat tmpfile \
         | jb-region $region \
         | jb-columns problem-size time-real-incl >> $outdata
      end

      #----------------------------------------------------------------------
      # Accumulate total-jbmem data
      #----------------------------------------------------------------------
   
      set region = 0-total
      set outdata = $top_dir/total-jbmem.data
   
      foreach infile ($jbperf_files)
         jb-global problem-size $N < $infile | jb-convert g2a problem-size > tmpfile
         
         cat tmpfile \
         | jb-region $region \
         | jb-columns problem-size jbmem-bytes-high >> $outdata
      end

      #----------------------------------------------------------------------
      # Plot residual history
      #----------------------------------------------------------------------

      set outdata = $top_dir/$problem_dir/resid.data
      set outpng  = $top_dir/$problem_dir/resid.png
      gnuplot <<EOF
      set output '$outpng'
      set terminal png large size 800,600
      set xlabel 'iter'
      set ylabel 'relative residual'
      set logscale y
      plot '$outdata' using (\$1):(\$2) title 'N = $N' w lp
EOF

   endif

end

#----------------------------------------------------------------------
# Plot total-time
#----------------------------------------------------------------------

set outdata = $top_dir/total-time.data
set outpng  = $top_dir/total-time.png
gnuplot <<EOF
set output '$outpng'
set terminal png large size 800,600
set xlabel 'N^{1/3}'
set ylabel 'ms per zone'
plot '$outdata' using (\$1):(\$2/\$1/\$1/\$1) title 'run' w lp
EOF

#----------------------------------------------------------------------
# Plot total-jbmem
#----------------------------------------------------------------------

set outdata = $top_dir/total-jbmem.data
set outpng  = $top_dir/total-jbmem.png
gnuplot <<EOF
set output '$outpng'
set terminal png large size 800,600
set xlabel 'N^{1/3}'
set ylabel 'bytes per zone'
plot '$outdata' using (\$1):(\$2/\$1/\$1/\$1) title 'run' w lp
EOF

   
