#!/bin/tcsh

#-----------------------------------------------------------------------
# Generate an input file via hypre-init, and run hypre-solve
#
# Usage: arguments are passed directly to hypre-init.  See hypre-init
#        for usage
#-----------------------------------------------------------------------

set PATH = `pwd`
set bin = "$PATH/../bin"

set extra = "dump_x true\n"
if ($2 <= 32) then
   echo "Turning on matrix and vector dumps"
   set extra = "${extra}dump_a true\ndump_b true\n"
endif


#----------------------------------------------------------------------
# INITIALIZE PROBLEM
#----------------------------------------------------------------------

set problem = "N$1.P$2$3$4.L$5.O$6"

set input = in.$problem

#----------------------------------------------------------------------
# CLEAN UP PREVIOUS RUN IF ANY
#----------------------------------------------------------------------

if (-e $problem) then
   rm -rf "$problem"
endif

#----------------------------------------------------------------------
# GENERATE THE INPUT FILE
#----------------------------------------------------------------------

$bin/hypre-init $1 $2 $3 $4 $5 $6 $7 $8 $9
printf "$extra" >> $input
mv $input $problem
cd $problem

#----------------------------------------------------------------------
# RUN THE PROBLEM
#----------------------------------------------------------------------

@ np = $3 * $4 * $5 

if ($HOST == "ds100") then
   @ nodes = ($np - 1) / 8 + 1
   if ($np < 8) then
      set procs = $np
   else
      set procs = 8
   endif
   (poe $bin/hypre-solve $input -nodes $nodes -tasks_per_node $procs -rmpool 1) >& outfile
else
   mpirun -np $np $bin/hypre-solve $input >& outfile
endif

#----------------------------------------------------------------------
# DISPLAY RESULT
#----------------------------------------------------------------------

set success = `grep "End hypre-solve" outfile | wc`
set success = $success[1]
if ($success == 1) then
   echo "Pass"
else
   echo "Fail"
endif
