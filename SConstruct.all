import os

TOPDIR  = GetLaunchDir()

platform = ARGUMENTS.get('platform',Platform())

if (platform == 'linux-mpi'):
   env = Environment (
      CXX         = 'mpiCC',	
      CPPFLAGS    = '-Wall -g',
      CPPPATH     = '#/include',
      FORTRANPATH = '#/include',
      FORTRAN     = 'gfortran',
      FORTRANLIBS = 'gfortran',
      LIBPATH     = '#/lib',
      BINPATH     = '#/bin',
   )
elif (platform == 'linux-ampi'):
   env = Environment(
      CXX         = '/home/bordner/charm/charm-6.2.0/bin/charmc -language ampi',
      CPPFLAGS    = '-Wall -g',
      CPPPATH     = '#/include',
      FORTRANPATH = '#/include',
      FORTRAN     = 'gfortran',
      FORTRANLIBS = 'gfortran',
      LIBPATH     = '#/lib',
      BINPATH     = '#/bin',
   )
elif (platform == 'triton'):
   env = Environment (
      ENV = {'PATH' : os.environ['PATH'],
	       'LM_LICENSE_FILE' : os.environ['LM_LICENSE_FILE']},
      CXX     = 'mpicxx',	
      CPPPATH = ['#/include', '/opt/pgi/hdf5_pgi/include'],
      LIBPATH = ['#/lib', '/opt/pgi/hdf5_pgi/lib'],
      BINPATH = '#/bin',
      CPPFLAGS = '-g -DH5_USE_16_API',
      FORTRAN = 'mpif90',
      FORTRANPATH = '#/include',
      LINKFLAGS = '-pgf90libs',
   )
elif (platform == 'ncsa-bd'):
   env = Environment (
      ARFLAGS  = 'r',
      BINPATH = '#/bin',
      CCFLAGS = '-O3 -qhot -q64 -D H5_USE_16_API',
      CC      = 'mpcc',	
#      CPPDEFPREFIX = '-WF,-D',
      CPPPATH = ['/home/bordner/include', '#/include'],
      CXX     = 'mpCC',	
      DEFINES = '',
      FORTRANFLAGS = '-O3 -qhot -q64 -qextname',
      FORTRANLIBS = 'xlf90',
      FORTRAN = 'mpfort',
      LIBPATH = ['#/lib','/home/bordner/lib','/opt/ibmcmp/xlf/13.1/lib64'],
      LINKFLAGS  = '-q64'
   )
else:
   env = Environment (
      CPPPATH = ['#/include'],
      LIBPATH = ['#/lib'],
      BINPATH = '#/bin'
   )


Export('env')
Export('platform')
SConscript('src/SConscript')
SConscript('test/SConscript')



